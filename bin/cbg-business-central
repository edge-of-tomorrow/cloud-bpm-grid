#!/bin/sh

source $CBG_HOME/bin/env.properties

# Cloud BPM Grid - Business Central

HELP="""
Usage: cbg-business-central COMMAND
       cbg-business-central --help

Business Central for Cloud BPM Grid.

COMMANDS:
    setup \t No-op
    build \t Build customized business-central.war and create Docker image
    rebuild \t Rebuild Business Central Docker image
    start \t Start Business Central in Docker container
    restart \t Restart Business Central in Docker container
    open \t Open Business Central in Browser
    status \t Show status of Business Central
    stop \t Stop Business Central in Docker container
    clear \t Clear build data and Business Central Docker image
    logs \t Show logs of Business Central
"""

case $1 in
    setup)
        # nothing to do
    ;;
    build|rebuild)
        docker rm -f business-central-$CBG_PROFILE > /dev/null 2>&1
        docker rmi -f cbg/business-central > /dev/null 2>&1
        echo "[Business Central] Building web archive and creating new Docker image cbg/business-central..."
        cd $CBG_HOME/images/business-central
        mvn clean package -Dauth.host=$AUTH_HOST -Dauth.port=$AUTH_PORT -Dauth.realm=$AUTH_REALM -Dauth.public.key=$AUTH_PUBLIC_KEY -Dauth.business.central.secret=$AUTH_BUSINESS_CENTRAL_SECRET -e
        cd - > /dev/null
    ;;
    start|restart)
        docker rm -f business-central-$CBG_PROFILE > /dev/null 2>&1
        echo "[Business Central] Starting new business-central Docker container..."
        # TODO put logs to $CBG_HOME/logs
        docker run --privileged -d -p $BC_PORT:8080 --net="host" --name business-central-$CBG_PROFILE -v $ASSETS_DIR:/opt/jboss/wildfly/bin/.niogit cbg/business-central > /dev/null
    ;;
    open)
        if which xdg-open > /dev/null
        then
          xdg-open "http://$BC_HOST:$BC_PORT/business-central"
        elif which gnome-open > /dev/null
        then
          gnome-open "http://$BC_HOST:$BC_PORT/business-central"
        fi
    ;;
    status)
        isDocker=`docker images | grep "^\(docker\.io\/\)\?cbg/business-central"`
        isDockerRunning=`docker ps | grep "cbg/business-central"`
        if curl --output /dev/null --silent --head --fail "http://$BC_HOST:$BC_PORT/business-central"
        then
            echo -e "business-central \t ${CBG_BLUE}running${CBG_NC}"
        elif [ -n "$isDockerRunning" ] ; then
            echo -e "business-central \t ${CBG_GREEN}starting${CBG_NC}"
        elif [ -n "$isDocker" ] ; then
            echo -e "business-central \t ${CBG_GREEN}ready to start${CBG_NC}"
        else
            echo -e "business-central \t ${CBG_RED}new (ready to build)${CBG_NC}"
        fi
    ;;
    stop)
        echo "[Business Central] Removing business-central Docker container..."
        docker rm -f business-central-$CBG_PROFILE > /dev/null 2>&1
    ;;
    clear)
        echo "[Business Central] Cleaning Business Central project..."
        cd $CBG_HOME/images/business-central
        mvn clean > /dev/null
        cd - > /dev/null
        echo "[Business Central] Removing business-central Docker container and its image..."
        docker rm -f business-central-$CBG_PROFILE > /dev/null 2>&1
        docker rmi -f cbg/business-central-$CBG_PROFILE > /dev/null 2>&1
    ;;
    logs)
        docker exec -it business-central-$CBG_PROFILE tail -f /opt/jboss/wildfly/standalone/log/server.log
    ;;
    help)
    echo -e "$HELP"
    ;;
esac

