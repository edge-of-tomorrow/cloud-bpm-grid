#!/bin/sh

source $CBG_HOME/bin/env.properties

# Cloud BPM Grid - Process Server

HELP="""
Usage: cbg-process-server COMMAND
       cbg-process-server --help

Process Server for Cloud BPM Grid.

COMMANDS:
    setup \t No-op
    build \t Build Swarm Fat-jar package of Process Server
    rebuild \t Rebuild Swarm Fat-jar package of Process Server
    start \t Start Process Server
    restart \t Restart Process Server
    open \t Open Process Server in Browser
    status \t Show status of Process Server
    stop \t Stop Process Server
    clear \t Clear build data
    logs \t Show logs of Process Server
    push \t Push Process Server Docker image to the Docker Hub
"""

case $1 in
    setup)
        echo "[Process Server] Pulling $CBG_VERSION Process Server Docker image..."
        docker pull bpmgrid/process-server:$CBG_VERSION > /dev/null
    ;;
    build|rebuild)
        docker rm -f process-server-$CBG_PROFILE > /dev/null 2>&1
        docker rmi -f bpmgrid/process-server > /dev/null 2>&1
        echo "[Process Server] Building web archive and creating new Docker image bpmgrid/process-server..."
        cd $CBG_HOME/images/process-server
        mvn clean package -Dcbg.conf.dir=$CBG_PROFILE_PATH/conf
        cd - > /dev/null
    ;;
    start|restart)
        docker rm -f process-server-$CBG_PROFILE > /dev/null 2>&1
        echo "[Process Server] Starting new process-server Docker container..."
        # TODO put logs to $CBG_HOME/work/logs
        docker run -d -p $PROCESS_SERVER_PORT:8181 --net="host" --name process-server-$CBG_PROFILE -e PROCESS_SERVER_ID=$PROCESS_SERVER_ID -e PROCESS_SERVER_CONTROLLER="http://$BC_HOST:$BC_PORT/business-central/rest/controller" -e BUSINESS_CENTRAL_CONTROLLER_USER=$BUSINESS_CENTRAL_CONTROLLER_USER -e BUSINESS_CENTRAL_CONTROLLER_PWD=$BUSINESS_CENTRAL_CONTROLLER_PWD -e DB_NAME=$DB_NAME -e DB_USER=$DB_USER -e DB_PWD=$DB_PWD -e DB_HOST=$DB_HOST -e DB_PORT=$DB_PORT -e PROCESS_SERVER_HOST=$PROCESS_SERVER_HOST -e PROCESS_SERVER_PORT=$PROCESS_SERVER_PORT -e AUTH_HOST=$AUTH_HOST -e AUTH_PORT=$AUTH_PORT -e AUTH_REALM=$AUTH_REALM -e AUTH_PROCESS_SERVER_SECRET=$AUTH_PROCESS_SERVER_SECRET -e LOGGER_PACKAGE=$LOGGER_PACKAGE -e LOGGER_LEVEL=$LOGGER_LEVEL -e MAIL_FROM=$MAIL_FROM -e TASK_INBOX_URL=$TASK_INBOX_URL bpmgrid/process-server:$CBG_VERSION > /dev/null
    ;;
    open)
        if which xdg-open > /dev/null
        then
          xdg-open "http://$PROCESS_SERVER_HOST:$PROCESS_SERVER_PORT/kie-server"
        elif which gnome-open > /dev/null
        then
          gnome-open "http://$PROCESS_SERVER_HOST:$PROCESS_SERVER_PORT/kie-server"
        fi
    ;;
    status)
        isDocker=`docker images | grep "^\(docker\.io\/\)\?bpmgrid/process-server"`
        isDockerRunning=`docker ps | grep "bpmgrid/process-server"`
        if curl --output /dev/null --silent --head --fail "http://$PROCESS_SERVER_HOST:$PROCESS_SERVER_PORT/kie-server/docs"
        then
            echo -e "process-server \t\t ${CBG_BLUE}running${CBG_NC}"
        elif [ -n "$isDockerRunning" ] ; then
            echo -e "process-server \t\t ${CBG_GREEN}starting${CBG_NC}"
        elif [ -n "$isDocker" ] ; then
            echo -e "process-server \t\t ${CBG_GREEN}ready to start${CBG_NC}"
        else
            echo -e "process-server \t\t ${CBG_RED}new (ready to build)${CBG_NC}"
        fi
    ;;
    stop)
        echo "[Process Server] Removing process-server Docker container..."
        docker rm -f process-server-$CBG_PROFILE > /dev/null 2>&1
    ;;
    clear)
        echo "[Process Server] Cleaning Process Server project..."
        cd $CBG_HOME/images/process-server
        mvn clean > /dev/null
        cd - > /dev/null
        echo "[Process Server] Removing process-server Docker container and its image..."
        docker rm -f process-server-$CBG_PROFILE > /dev/null 2>&1
        docker rmi -f bpmgrid/process-server > /dev/null 2>&1
    ;;
    logs)
        docker exec -it process-server-$CBG_PROFILE tail -f /opt/jboss/wildfly/standalone/log/server.log
    ;;
    push)
        docker tag bpmgrid/process-server:latest bpmgrid/process-server:$CBG_VERSION
        docker push bpmgrid/process-server:$CBG_VERSION
    ;;
    help)
    echo -e "$HELP"
    ;;
esac

